name: S3 Terraform CI/CD

on:
  pull_request:
    branches: [ main ]
    paths: [ 's3-project/**' ]
  push:
    branches: [ main ]
    paths: [ 's3-project/**' ]

permissions:
  contents: write    

env:
  TF_VERSION: 1.12.2
  TFLINT_VERSION: v0.52.0
  AWS_REGION: us-east-1
  PROJECT: s3

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./s3-project
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v4
        with:
          tflint_version: ${{ env.TFLINT_VERSION }}

      - name: Run TFLint
        id: tflint
        run: tflint --init && tflint

      - name: Comment TFLint Results
        if: failure() && github.event_name == 'pull_request'
        uses: GetTerminus/terraform-pr-commenter@v3
        with:
          job: tflint
          id: tflint
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check -recursive

      - name: Terraform Validate
        id: validate
        run: terraform init -backend=false && terraform validate

  security-scan:
    name: Security Scan
    needs: lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./s3-project
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run TFSec
        uses: aquasecurity/tfsec-pr-commenter-action@v1.3.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  plan:
    name: Plan
    needs: [lint, security-scan]
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read
    defaults:
      run:
        working-directory: ./s3-project
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}  

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}  

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        id: plan
        run: |
          mkdir -p ./terraform_plans
          terraform plan -lock=false -input=false -no-color -out=./terraform_plans/tfplan.binary
          terraform show -no-color ./terraform_plans/tfplan.binary > ./terraform_plans/plan.txt
          echo "exit_code=$?" >> $GITHUB_OUTPUT

      - name: Comment Plan Results
        if: github.event_name == 'pull_request'
        uses: GetTerminus/terraform-pr-commenter@v3
        with:
          commenter_type: plan
          commenter_input: ./terraform_plans/tfplan.txt
          commenter_plan_path: ./terraform_plans/plan.txt
          commenter_exitcode: ${{ steps.plan.outputs.exit_code }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          TF_WORKSPACE: ${{ inputs.terraform_workspace }}

  release:
    name: Create Release
    needs: plan
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    outputs:
      release_tag: ${{ steps.semver_s3.outputs.new_version }} 
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Generate S3 Zip File
        working-directory: s3-project
        run: |
          zip -r s3-terraform-config.zip . -x "*.git*"
          mkdir -p releases
          mv s3-terraform-config.zip releases/    

      - name: Get Semantic Version
        id: semver_s3
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: "main"
          tag_prefix: "s3-v"
          create_annotated_tag: true
          dry_run: false
          default_bump: "patch"

      - name: Upload S3 Release Asset
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: ${{ steps.semver_s3.outputs.new_version }}
          prerelease: false
          title: "S3 Release ${{ steps.semver_s3.outputs.new_version }}"
          files: |
            s3-terraform-config.zip

  deploy:
    name: Deploy S3
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}  

      - name: Download S3 Release Artifact
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: ${{ github.repository }}
          token: ${{ secrets.GH_PAT }}
          target: s3-terraform-config.zip
          file: s3-terraform-config.zip  

      - name: Unzip Artifact
        run: unzip s3-terraform-config.zip -d s3-terraform

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Get EC2 Remote State
        working-directory: ./s3-deploy/s3-project
        run: |
          terraform init
          terraform plan

      - name: Terraform Apply
        working-directory: ./s3-deploy/s3-project
        run: terraform apply -auto-approve -input=false          
        